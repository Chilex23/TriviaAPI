{"version":3,"sources":["components/FormView.js","components/Question.js","components/Search.js","components/QuestionView.js","components/Header.js","components/QuizView.js","components/LeaderBoardView.js","App.js","index.js"],"names":["FormView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitQuestion","event","preventDefault","$","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","defineProperty","target","name","value","categories","_this2","react_default","a","createElement","id","className","onSubmit","onChange","map","key","Component","Question","visibleAnswer","_this$props","alt","concat","src","onClick","questionAction","flipVisibility","style","visibility","Search","query","getInfo","submitSearch","handleInputChange","search","placeholder","ref","input","QuestionView","getQuestions","page","questions","totalQuestions","total_questions","currentCategory","current_category","getByCategory","searchTerm","action","window","confirm","num","_this3","pageNumbers","maxPage","Math","ceil","_loop","i","push","selectPage","_this4","components_Search","q","ind","components_Question","filter","c","createPagination","Header","uri","location","href","origin","navTo","QuizView","selectCategory","_ref","_ref$id","quizCategory","getNextQuestion","previousQuestions","toConsumableArray","currentQuestion","previous_questions","quiz_category","showAnswer","guess","forceEnd","submitToLeaderBoard","playerName","score","numCorrect","submitPlayerName","submitGuess","evaluate","evaluateAnswer","restartGame","formatGuess","replace","toLowerCase","split","every","el","includes","Fragment","cateogry","react_router_dom","to","length","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay","LeaderboardView","getResults","results","totalResults","player","App","components_Header","path","react_router","exact","component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.524692a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/FormView.css';\r\n\r\nclass FormView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      question: '',\r\n      answer: '',\r\n      difficulty: 1,\r\n      category: 1,\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.ajax({\r\n      url: `/categories`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({ categories: result.categories });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  }\r\n\r\n  submitQuestion = (event) => {\r\n    event.preventDefault();\r\n    $.ajax({\r\n      url: '/questions', //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        question: this.state.question,\r\n        answer: this.state.answer,\r\n        difficulty: this.state.difficulty,\r\n        category: this.state.category,\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        document.getElementById('add-question-form').reset();\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to add question. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id='add-form'>\r\n        <h2>Add a New Trivia Question</h2>\r\n        <form\r\n          className='form-view'\r\n          id='add-question-form'\r\n          onSubmit={this.submitQuestion}\r\n        >\r\n          <label>\r\n            Question\r\n            <input type='text' name='question' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Answer\r\n            <input type='text' name='answer' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Difficulty\r\n            <select name='difficulty' onChange={this.handleChange}>\r\n              <option value='1'>1</option>\r\n              <option value='2'>2</option>\r\n              <option value='3'>3</option>\r\n              <option value='4'>4</option>\r\n              <option value='5'>5</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Category\r\n            <select name='category' onChange={this.handleChange}>\r\n              {this.state.categories.map(category => {\r\n                  return (\r\n                    <option key={category.id} value={category.id}>\r\n                      {category.type}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </label>\r\n          <input type='submit' className='button' value='Submit' />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Question.css';\r\n\r\nclass Question extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visibleAnswer: false,\r\n    };\r\n  }\r\n\r\n  flipVisibility() {\r\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\r\n  }\r\n\r\n  render() {\r\n    const { question, answer, category, difficulty } = this.props;\r\n    return (\r\n      <div className='Question-holder'>\r\n        <div className='Question'>{question}</div>\r\n        <div className='Question-status'>\r\n          <img\r\n            className='category'\r\n            alt={`${category}`}\r\n            src={`${category}.svg`}\r\n          />\r\n          <div className='difficulty'>Difficulty: {difficulty}</div>\r\n          <img\r\n            src='delete.png'\r\n            alt='delete'\r\n            className='delete'\r\n            onClick={() => this.props.questionAction('DELETE')}\r\n          />\r\n        </div>\r\n        <div\r\n          className='show-answer button'\r\n          onClick={() => this.flipVisibility()}\r\n        >\r\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\r\n        </div>\r\n        <div className='answer-holder'>\r\n          <span\r\n            style={{\r\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\r\n            }}\r\n          >\r\n            Answer: {answer}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  getInfo = (event) => {\r\n    event.preventDefault();\r\n    this.props.submitSearch(this.state.query);\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      query: this.search.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.getInfo}>\r\n        <input\r\n          placeholder='Search questions...'\r\n          ref={(input) => (this.search = input)}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <input type='submit' value='Submit' className='button' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/App.css';\r\nimport Question from './Question';\r\nimport Search from './Search';\r\nimport $ from 'jquery';\r\n\r\nclass QuestionView extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      page: 1,\r\n      totalQuestions: 0,\r\n      categories: [],\r\n      currentCategory: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  getQuestions = () => {\r\n    $.ajax({\r\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          categories: result.categories,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  selectPage(num) {\r\n    this.setState({ page: num }, () => this.getQuestions());\r\n  }\r\n\r\n  createPagination() {\r\n    let pageNumbers = [];\r\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      pageNumbers.push(\r\n        <span\r\n          key={i}\r\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\r\n          onClick={() => {\r\n            this.selectPage(i);\r\n          }}\r\n        >\r\n          {i}\r\n        </span>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  }\r\n\r\n  getByCategory = (id) => {\r\n    $.ajax({\r\n      url: `/categories/${id}/questions`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitSearch = (searchTerm) => {\r\n    $.ajax({\r\n      url: `/questions`, //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({ searchTerm: searchTerm }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  questionAction = (id) => (action) => {\r\n    if (action === 'DELETE') {\r\n      if (window.confirm('are you sure you want to delete the question?')) {\r\n        $.ajax({\r\n          url: `/questions/${id}`, //TODO: update request URL\r\n          type: 'DELETE',\r\n          success: (result) => {\r\n            this.getQuestions();\r\n          },\r\n          error: (error) => {\r\n            alert('Unable to load questions. Please try your request again');\r\n            return;\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='question-view'>\r\n        <div className='categories-list'>\r\n          <h2\r\n            onClick={() => {\r\n              this.getQuestions();\r\n            }}\r\n          >\r\n            Categories\r\n          </h2>\r\n          <ul>\r\n            {this.state.categories.map(category => (\r\n              <li\r\n                key={category.id}\r\n                onClick={() => {\r\n                  this.getByCategory(category.id);\r\n                }}\r\n              >\r\n                {category.type}\r\n                <img\r\n                  className='category'\r\n                  alt={`${category.type}`}\r\n                  src={`${category.type}.svg`}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Search submitSearch={this.submitSearch} />\r\n        </div>\r\n        <div className='questions-list'>\r\n          <h2>Questions</h2>\r\n          {this.state.questions.map((q, ind) => (\r\n            <Question\r\n              key={q.id}\r\n              question={q.question}\r\n              answer={q.answer}\r\n              category={\r\n                this.state.categories.filter(c => c.id === q.category)[0].type\r\n              }\r\n              difficulty={q.difficulty}\r\n              questionAction={this.questionAction(q.id)}\r\n            />\r\n          ))}\r\n          <div className='pagination-menu'>{this.createPagination()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Header.css';\r\n\r\nclass Header extends Component {\r\n  navTo(uri) {\r\n    window.location.href = window.location.origin + uri;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App-header'>\r\n        <h1\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          Udacitrivia\r\n        </h1>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          List\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/add');\r\n          }}\r\n        >\r\n          Add\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/play');\r\n          }}\r\n        >\r\n          Play\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../stylesheets/QuizView.css';\r\n\r\nconst questionsPerPlay = 5;\r\n\r\nclass QuizView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      categories: [],\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n      playerName: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.ajax({\r\n      url: `/categories`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({ categories: result.categories });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  }\r\n\r\n  selectCategory = ({ type, id = 0 }) => {\r\n    this.setState({ quizCategory: { type, id } }, this.getNextQuestion);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  getNextQuestion = () => {\r\n    const previousQuestions = [...this.state.previousQuestions];\r\n    if (this.state.currentQuestion.id) {\r\n      previousQuestions.push(this.state.currentQuestion.id);\r\n    }\r\n\r\n    $.ajax({\r\n      url: '/quizzes', //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        previous_questions: previousQuestions,\r\n        quiz_category: this.state.quizCategory,\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          showAnswer: false,\r\n          previousQuestions: previousQuestions,\r\n          currentQuestion: result.question,\r\n          guess: '',\r\n          forceEnd: result.question ? false : true,\r\n        }, () => {\r\n          if (this.state.forceEnd) this.submitToLeaderBoard();\r\n        });\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load question. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitToLeaderBoard = () => {\r\n    $.ajax({\r\n      url: '/leaderboard', //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        name: this.state.playerName,\r\n        score: this.state.numCorrect,\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          numCorrect: 0,\r\n          playerName: '',\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to submit score. Please try your request again');\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  submitPlayerName = (event) => {\r\n    const name = document.getElementById('player-name').value;\r\n    this.setState({ playerName: name });\r\n  }\r\n\r\n  submitGuess = (event) => {\r\n    event.preventDefault();\r\n    let evaluate = this.evaluateAnswer();\r\n    this.setState({\r\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\r\n      showAnswer: true,\r\n    });\r\n  };\r\n\r\n  restartGame = () => {\r\n    this.setState({\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n    });\r\n  };\r\n\r\n  renderPrePlay() {\r\n    return ( \r\n    <div className='quiz-play-holder'>\r\n        {this.state.playerName ? (<> <div className='choose-header'>Choose Category</div>\r\n        <div className='category-holder'>\r\n          <div className='play-category' onClick={this.selectCategory}>\r\n            ALL\r\n          </div>\r\n          {this.state.categories.map(cateogry => {\r\n            return (\r\n              <div\r\n                key={cateogry.id}\r\n                value={cateogry.id}\r\n                className=\"play-category\"\r\n                onClick={() => this.selectCategory(cateogry)}\r\n              >\r\n                {cateogry.type}\r\n              </div>\r\n            );\r\n          })}\r\n        </div> </>) : (\r\n          <div className='player-name-holder'>\r\n            <div className='player-name-header'>Enter your name to play</div>\r\n            <div className='player-name-input'>\r\n              <input id='player-name' type='text' name='playerName' />\r\n              <button className='player-btn' onClick={this.submitPlayerName}>Submit</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      ) \r\n  }\r\n\r\n  renderFinalScore() {\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='final-header'>\r\n          Your Final Score is {this.state.numCorrect}\r\n          <p>\r\n\t\t\t\t\t\t<Link to=\"leaderboard\">\r\n\t\t\t\t\t\t\tSee where you rank in the leaderboard.{\" \"}\r\n\t\t\t\t\t\t</Link>{\" \"}\r\n\t\t\t\t\t</p>\r\n        </div>\r\n        <div className='play-again button' onClick={this.restartGame}>\r\n          Play Again?\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  evaluateAnswer = () => {\r\n    const formatGuess = this.state.guess\r\n      // eslint-disable-next-line\r\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\r\n      .toLowerCase();\r\n    const answerArray = this.state.currentQuestion.answer\r\n      .toLowerCase()\r\n      .split(' ');\r\n    return answerArray.every((el) => formatGuess.includes(el));\r\n  };\r\n\r\n  renderCorrectAnswer() {\r\n    let evaluate = this.evaluateAnswer();\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>\r\n          {evaluate ? 'You were correct!' : 'You were incorrect'}\r\n        </div>\r\n        <div className='quiz-answer'>{this.state.currentQuestion.answer}</div>\r\n        <div className='next-question button' onClick={this.getNextQuestion}>\r\n          {' '}\r\n          Next Question{' '}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPlay() {\r\n    return this.state.previousQuestions.length === questionsPerPlay ||\r\n      this.state.forceEnd ? (\r\n      this.renderFinalScore()\r\n    ) : this.state.showAnswer ? (\r\n      this.renderCorrectAnswer()\r\n    ) : (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <form onSubmit={this.submitGuess}>\r\n          <input type='text' name='guess' onChange={this.handleChange} />\r\n          <input\r\n            className='submit-guess button'\r\n            type='submit'\r\n            value='Submit Answer'\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.state.quizCategory ? this.renderPlay() : this.renderPrePlay();\r\n  }\r\n}\r\n\r\nexport default QuizView;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport \"../stylesheets/LeaderboardView.css\";\r\n\r\nclass LeaderboardView extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tresults: [],\r\n\t\t\tpage: 1,\r\n\t\t\ttotalResults: 0,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getResults();\r\n\t}\r\n\r\n\tgetResults = () => {\r\n\t\t$.ajax({\r\n\t\t\turl: `/leaderboard?page=${this.state.page}`,\r\n\t\t\ttype: \"GET\",\r\n\t\t\tsuccess: (result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tresults: result.results,\r\n\t\t\t\t\ttotalResults: result.totalResults,\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t},\r\n\t\t\terror: (error) => {\r\n\t\t\t\talert(\"Unable to load scores. Please try your request again\");\r\n\t\t\t\treturn;\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tselectPage(num) {\r\n\t\tthis.setState({ page: num }, () => this.getResults());\r\n\t}\r\n\r\n\tcreatePagination() {\r\n\t\tlet pageNumbers = [];\r\n\t\tlet maxPage = Math.ceil(this.state.totalResults / 10);\r\n\t\tfor (let i = 1; i <= maxPage; i++) {\r\n\t\t\tpageNumbers.push(\r\n\t\t\t\t<span\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tclassName={`page-num pointer-cursor ${\r\n\t\t\t\t\t\ti === this.state.page ? \"active\" : \"\"\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tthis.selectPage(i);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{i}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn pageNumbers;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"leaderboard-view\">\r\n\t\t\t\t{this.state.results.length ? (\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th> Player</th>\r\n\t\t\t\t\t\t\t<th> Score</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t{this.state.results.map((result) => (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td> {result.player} </td>\r\n\t\t\t\t\t\t\t\t<td> {result.score} </td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</table>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThere are no scores to display.\r\n\t\t\t\t\t\t<Link to=\"play\">Play the trivia game here. </Link>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className=\"pagination-menu\">{this.createPagination()}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default LeaderboardView;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './stylesheets/App.css';\r\nimport FormView from './components/FormView';\r\nimport QuestionView from './components/QuestionView';\r\nimport Header from './components/Header';\r\nimport QuizView from './components/QuizView';\r\nimport LeaderboardView from './components/LeaderBoardView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Header path />\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact component={QuestionView} />\r\n            <Route path='/add' component={FormView} />\r\n            <Route path='/play' component={QuizView} />\r\n            <Route path=\"/leaderboard\" component={LeaderboardView} />\r\n            <Route component={QuestionView} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stylesheets/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}